{"version":3,"file":"static/js/582.321da7a1.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","redux/contacts/contactsSelectors.js","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  font-size: ${p => {\n    return p.type === 'submit' ? p.theme.fontSizes.s : p.theme.fontSizes.xs;\n  }};\n  font-weight: ${p => {\n    return p.type === 'submit'\n      ? p.theme.fontWeights.bold\n      : p.theme.fontWeights.normal;\n  }};\n  color: ${p => p.theme.colors.black};\n  margin: ${p => p.theme.space[2]}px;\n  padding-top: ${p => {\n    return p.type === 'submit' ? '8px' : '0px';\n  }};\n  padding-bottom: ${p => {\n    return p.type === 'submit' ? '8px' : '0px';\n  }};\n  background-color: ${p => p.theme.colors.background};\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.normal};\n  cursor: pointer;\n\n  :hover {\n    border-color: ${p => {\n      return p.type === 'submit' ? p.theme.colors.secondary : 'red';\n    }};\n    color: ${p => {\n      return p.type === 'submit' ? p.theme.colors.white : 'red';\n    }};\n    background-color: ${p => {\n      return p.type === 'submit'\n        ? p.theme.colors.primary\n        : p.theme.colors.background;\n    }};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledButton } from './Button.styled';\n\nconst Button = ({ type = 'button', children, handleFunc }) => {\n  return (\n    <StyledButton type={type} onClick={handleFunc}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  handleFunc: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.span`\n  color: ${p => p.theme.colors.text};\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const Number = styled.span`\n  color: ${p => p.theme.colors.text};\n`;\n","import Button from 'components/Button';\nimport PropTypes from 'prop-types';\nimport Box from 'components/Box';\nimport { Name, Number } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n      <div>\n        <Name>{name}:</Name>\n        <Number>{number}</Number>\n      </div>\n      <Button type=\"button\" handleFunc={() => deleteContact(id)}>\n        Delete\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","export const getContacts = state => state.contacts.items;\n\nexport const getLoadingStatus = state => state.contacts.isLoading;\n","import Box from 'components/Box';\nimport ContactItem from 'components/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport { getFilter } from 'redux/filter/filterSlice';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = contacts.filter(e =>\n    e.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const deleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" p=\"0px\" as=\"ul\">\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            deleteContact={deleteContact}\n          />\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  margin: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled.input`\n  margin: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: 1px solid ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.normal};\n  width: 200px;\n\n  :hover,\n  :focus {\n    border: 1px solid ${p => p.theme.colors.background};\n    border-bottom: 1px solid ${p => p.theme.colors.primary};\n    border-radius: ${p => p.theme.radii.none};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport {\n  getContacts,\n  getLoadingStatus,\n} from 'redux/contacts/contactsSelectors';\nimport Box from 'components/Box';\nimport { Input, Title } from './ContactForm.styled';\nimport Button from 'components/Button';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoadingStatus);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const allContactNames = contacts.map(contact => contact.name);\n\n  const checkDuplicates = name => {\n    if (allContactNames.includes(name)) {\n      alert(`${name} is already in contacts.`);\n      return true;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkDuplicates(name)) {\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      onSubmit={handleSubmit}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      as=\"form\"\n    >\n      <label>\n        <Title>Name</Title>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <Title>Number</Title>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <Button type=\"submit\">{isLoading ? 'Loading...' : 'Add contact'}</Button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n`;\n\nexport const Input = styled.input`\n  /* width: 100px; */\n  margin: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: 1px solid ${p => p.theme.colors.muted};\n\n  :hover {\n    border: 1px solid ${p => p.theme.colors.background};\n    border-bottom: 1px solid ${p => p.theme.colors.primary};\n    border-radius: ${p => p.theme.radii.none};\n  }\n`;\n","import React from 'react';\nimport { Input, Title } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <label>\n      <Title>Find contacts by name</Title>\n      <Input\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Type to search\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport Box from 'components/Box';\nimport ContactList from 'components/ContactsList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={5}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Contacts page</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <h1>Phonebook</h1>\n      <Box\n        width=\"300px\"\n        textAlign=\"center\"\n        border=\"normal\"\n        borderColor=\"accent\"\n        borderRadius=\"normal\"\n        p={4}\n      >\n        <ContactForm />\n      </Box>\n      {contacts.length > 0 ? (\n        <Box width=\"300px\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Box>\n      ) : (\n        <h2>Contact list is empty</h2>\n      )}\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledButton","styled","p","type","theme","fontSizes","s","xs","fontWeights","bold","normal","colors","black","space","background","borders","muted","radii","secondary","white","primary","children","handleFunc","onClick","Name","text","Number","id","name","number","deleteContact","Box","display","justifyContent","alignItems","getContacts","state","contacts","items","getLoadingStatus","isLoading","dispatch","useDispatch","useSelector","filter","getFilter","filteredContacts","e","toLowerCase","includes","removeContact","flexDirection","as","map","Title","l","Input","none","useState","setName","setNumber","handleChange","target","value","allContactNames","contact","reset","onSubmit","preventDefault","alert","checkDuplicates","newContact","addContact","onChange","pattern","title","required","m","setFilter","placeholder","useEffect","fetchContacts","width","textAlign","border","borderColor","borderRadius","length"],"sourceRoot":""}