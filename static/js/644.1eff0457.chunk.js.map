{"version":3,"file":"static/js/644.1eff0457.chunk.js","mappings":"4PAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAsElB,EAlEqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAWN,OACE,UAACC,EAAA,EAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,kDAIJ,kBAAMC,SAfW,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,EAAAA,GAAAA,SAAwB,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAUoBS,MAAOxB,EAAOC,KAAMwB,aAAa,MAA/D,WACE,mBAAOD,MAAOxB,EAAOG,MAArB,gCAEE,kBAAOuB,KAAK,OAAOhB,KAAK,OAAOQ,MAAOR,EAAMiB,SAAUX,QAGxD,mBAAOQ,MAAOxB,EAAOG,MAArB,4CAEE,kBACEuB,KAAK,QACLhB,KAAK,QACLQ,MAAON,EACPe,SAAUX,QAId,mBAAOQ,MAAOxB,EAAOG,MAArB,kDAEE,kBACEuB,KAAK,WACLhB,KAAK,WACLQ,MAAOJ,EACPa,SAAUX,QAId,mBAAQU,KAAK,SAAb","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport Box from 'components/Box';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <Box>\n      <HelmetProvider>\n        <Helmet>\n          <title>Register page</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","Box","onSubmit","e","preventDefault","authOperations","style","autoComplete","type","onChange"],"sourceRoot":""}